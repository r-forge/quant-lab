k3; skewness(x)
k3 <- 1/100*sum((x - mean(x))^3)/(sd(x)^3)
k3; skewness(x)
k3 <- 1/99*sum((x - mean(x))^3)/(sd(x)^3)
k3; skewness(x)
k3 <- 100/99/99*sum((x - mean(x))^3)/(sd(x)^3)
k3; skewness(x)
k3 <- 100/99/98*sum((x - mean(x))^3)/(sd(x)^3)
k3; skewness(x)
k3 <- 100/99/98*sum((x - mean(x))^3)/((1/100*sum((x - mean(x))^2))^1.5)
k3; skewness(x)
k3 <- 1/100*sum((x - mean(x))^3)/((1/100*sum((x - mean(x))^2))^1.5)
k3; skewness(x)
k4 <- 1/100*sum((x - mean(x))^4)/((1/100*sum((x - mean(x))^2))^2) - 3
k4; kurtosis(k4)
k4; kurtosis(x)
k4 <- 1/100*sum((x - mean(x))^4)/((1/100*sum((x - mean(x))^2))^2)
k4; kurtosis(x)
cumulants <- function(order=c(1, 2, 3, 4), x, n=35)
{
if(order == 1)
{
k1 <- NA
for(i in n:length(x))
k1[i] <- mean(x[(i-n+1):i])
return(k1)
}
if(order == 2)
{
k2 <- NA
n2 <- 1/(n-1)
for(i in n:length(x))
k2[i] <- n2 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^2)
return(k2)
}
if(order == 3)
{
k3 <- NA
n3 <- n/(n-1)/(n-2)
for(i in n:length(x))
k3[i] <- n3 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^3)
return(k3)
}
if(order == 4)
{
k4 <- NA
n4 <- (n+1)*(n+2)/(n*(n-1)*(n-2))
n5 <- ((n-1)^2)/(n-2)/(n-3)/(n-1)
for(i in n:length(x))
k4[i] <- n4 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^4) -
3 * n5 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^2)
return(k4)
}
}
x <- rnorm(n=100, mean = 0, sd = 1)
k1 <- cumulants(order=1, x=x, n=100)
k1
run.cumulants <- function(order=c(1, 2, 3, 4), x, n=35)
{
if(order == 1)
{
k1 <- NA
for(i in n:length(x))
k1[i] <- mean(x[(i-n+1):i])
return(k1)
}
if(order == 2)
{
k2 <- NA
n2 <- 1/(n-1)
for(i in n:length(x))
k2[i] <- n2 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^2)
return(k2)
}
if(order == 3)
{
k3 <- NA
n3 <- n/(n-1)/(n-2)
for(i in n:length(x))
k3[i] <- n3 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^3)
return(k3)
}
if(order == 4)
{
k4 <- NA
n4 <- (n+1)*(n+2)/(n*(n-1)*(n-2))
n5 <- ((n-1)^2)/(n-2)/(n-3)/(n-1)
for(i in n:length(x))
k4[i] <- n4 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^4) -
3 * n5 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^2)
return(k4)
}
}
k1 <- run.cumulants(order=1, x=x, n=100)
last(k1)
mean(x)
k2 <- run.cumulants(order=2, x=x, n=100)
last(k2)
var(x)
k3 <- run.cumulants(order=3, x=x, n=100)
last(k3)
k3 <- last(k3)
k2 <- last(k2)
k3/(k2)^1.5
skewness(x)
k4 <- run.cumulants(order=4, x=x, n=100)
k4 <- last(k4)
k4/(k2)^2
kurtosis(x)
run.cumulants <- function(order=c(1, 2, 3, 4), x, n=35)
{
if(order == 1)
{
k1 <- NA
for(i in n:length(x))
k1[i] <- mean(x[(i-n+1):i])
return(k1)
}
if(order == 2)
{
k2 <- NA
n2 <- 1/(n-1)
for(i in n:length(x))
k2[i] <- n2 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^2)
return(k2)
}
if(order == 3)
{
k3 <- NA
n3 <- n/(n-1)/(n-2)
for(i in n:length(x))
k3[i] <- n3 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^3)
return(k3)
}
if(order == 4)
{
k4 <- NA
n4 <- (n+1)*(n+2)/(n*(n-1)*(n-2))
n5 <- ((n-1)^2)/(n-2)/(n-3)/(n-1)
for(i in n:length(x))
k4[i] <- n4 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^4)# -
#3 * n5 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^2)
return(k4)
}
}
k4 <- run.cumulants(order=4, x=x, n=100)
k4 <- last(k4)
k4/(k2)^2
kurtosis(x)
run.cumulants <- function(order=c(1, 2, 3, 4), x, n=35)
{
if(order == 1)
{
k1 <- NA
for(i in n:length(x))
k1[i] <- mean(x[(i-n+1):i])
return(k1)
}
if(order == 2)
{
k2 <- NA
n2 <- 1/(n-1)
for(i in n:length(x))
k2[i] <- n2 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^2)
return(k2)
}
if(order == 3)
{
k3 <- NA
n3 <- n/(n-1)/(n-2)
for(i in n:length(x))
k3[i] <- n3 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^3)
return(k3)
}
if(order == 4)
{
k4 <- NA
n4 <- n*(n+1)/((n-1)*(n-2)*(n-3))
n5 <- ((n-1)^2)/(n-2)/(n-3)/(n-1)
for(i in n:length(x))
k4[i] <- n4 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^4) -
3 * n5 * sum((x[(i-n+1):i] - mean(x[(i-n+1):i]))^2)
return(k4)
}
}
k4 <- run.cumulants(order=4, x=x, n=100)
k4 <- last(k4)
k4/((k2)^2)
kurtosis(x)
sum((x-mean(x))^4)/100
sum((x-mean(x))^4)/var(x)^2
sum((x-mean(x))^4)/(var(x))^2
sum(1/100*(x-mean(x))^4)/(1/100*(x-mean(x))^2)^2
sum(1/100*(x-mean(x))^4)/(1/100*sum(x-mean(x))^2)^2
k2 <- run.cumulants(order=2, x=x, n=100)
last(k2)
var(x)
k2 <- last(k2)
sum(1/100*(x-mean(x))^4)/((1/100*sum(x-mean(x))^2)^2)
sum(1/100*sum(x-mean(x))^4)/((1/100*sum(x-mean(x))^2)^2)
(1/100*sum((x-mean(x))^4)/((1/100*sum(x-mean(x))^2)^2)
1/100*sum((x-mean(x))^4)/((1/100*sum(x-mean(x))^2)^2)
(
1/100*sum((x-mean(x))^4)/(1/100*sum((x-mean(x))^2)^2)
kurtosis(x)
sd(x)^2
k2
1/100*sum((x-mean(x))^4)/((1/100*sum((x-mean(x))^2))^2)
kurtosis(x)
k4 <- run.cumulants(order=4, x=x, n=100)
k4 <- last(k4)
k4/((k2)^2)
kurtosis(x)
kurtosis(x)-3
library("quantmod")
data.folder <- "C:/Projects/Market Data/FORTS"
load(file.path(data.folder, "SiH4.2014-03-17.5min.RData"))
ticker <- "SiH4"
date.from <- "2013-12-09"
date.to <- "2014-03-17"
time.frame <- "5min"
src.method <- "Finam"
data.colnames <- c("Open", "High", "Low", "Close", "Volume")
data.folder <- "C:/Projects/Market Data/FORTS"
s <- getSymbols(ticker, from=date.from, to=date.to, per=time.frame,
src=src.method, auto.assign=FALSE)
colnames(s) <- data.colnames
head(s); tail(s); is(s)
file.RData <- file.path(data.folder, paste(ticker, date.to, time.frame,
"RData", sep="."))
save(s, file=file.RData)
load(file.path(data.folder, "SiH4.2014-03-17.5min.RData"))
head(s); tail(s)
returns <- function(x, per=1)
{
return(diff(log(x), per))
}
cumulants <- function(order=c(1, 2, 3, 4), x, na.rm=FALSE)
{
if(na.rm)
x <- x[!is.na(x)]
if(order == 1)
{
k1 <- mean(x)
return(k1)
}
if(order == 2)
{
k2 <- NA
n2 <- 1/(length(x)-1)
k2 <- n2 * sum((x - mean(x))^2)
return(k2)
}
if(order == 3)
{
k3 <- NA
n3 <- length(x)/(length(x)-1)/(length(x)-2)
k3 <- n3 * sum((x - mean(x))^3)
return(k3)
}
if(order == 4)
{
k4 <- NA
n4 <- length(x)*(length(x)+1)/((length(x)-1)*(length(x)-2)*(length(x)-3))
n5 <- ((length(x)-1)^2)/(length(x)-2)/(length(x)-3)/(length(x)-1)
k4 <- n4 * sum((x - mean(x))^4)# - 3 * n5 * sum((x - mean(x))^2)
return(k4)
}
return(NA)
}
date.vec <- unique(as.Date(index(s)))
k1.real <- k2.real <- k3.real <- k4.real <- NULL
for(i in 1:length(date.vec)) { # i <- 10
s.filter <- s[.indexDate(s) == date.vec[i] &
10 <= .indexhour(s) & .indexhour(s) <= 18]
ret <- as.vector(returns(s.filter$Close))
ret <- ret[!is.na(ret)]
k1.real[i] <- cumulants(order=1, x=ret)
k2.real[i] <- cumulants(order=2, x=ret)
k3.real[i] <- cumulants(order=3, x=ret)
k4.real[i] <- cumulants(order=4, x=ret)
}
for(i in 1:length(date.vec)) { # i <- 10
s.filter <- s[.indexDate(s) == date.vec[i] &
10 <= .indexhour(s) & .indexhour(s) <= 18]
ret <- as.vector(returns(s.filter$Close))
ret <- ret[!is.na(ret)]
k1.real[i] <- cumulants(order=1, x=ret)
k2.real[i] <- cumulants(order=2, x=ret)
k3.real[i] <- cumulants(order=3, x=ret)
k4.real[i] <- cumulants(order=4, x=ret)
}
k1
k1.real <- k2.real <- k3.real <- k4.real <- NULL
for(i in 1:length(date.vec)) { # i <- 10
s.filter <- s[.indexDate(s) == date.vec[i] &
10 <= .indexhour(s) & .indexhour(s) <= 18]
ret <- as.vector(returns(s.filter$Close))
ret <- ret[!is.na(ret)]
k1.real[i] <- cumulants(order=1, x=ret)
k2.real[i] <- cumulants(order=2, x=ret)
k3.real[i] <- cumulants(order=3, x=ret)
k4.real[i] <- cumulants(order=4, x=ret)
}
k1.real
i <- 10
ret
cumulants <- function(order=c(1, 2, 3, 4), x, na.rm=FALSE)
{
if(na.rm)
x <- x[!is.na(x)]
if(order == 1)
{
k1 <- mean(x)
return(k1)
}
if(order == 2)
{
k2 <- NA
n2 <- 1/(length(x)-1)
k2 <- n2 * sum((x - mean(x))^2)
return(k2)
}
if(order == 3)
{
k3 <- NA
n3 <- length(x)/(length(x)-1)/(length(x)-2)
k3 <- n3 * sum((x - mean(x))^3)
return(k3)
}
if(order == 4)
{
k4 <- NA
n4 <- length(x)*(length(x)+1)/((length(x)-1)*(length(x)-2)*(length(x)-3))
n5 <- ((length(x)-1)^2)/(length(x)-2)/(length(x)-3)/(length(x)-1)
#k4 <- n4 * sum((x - mean(x))^4) - 3 * n5 * sum((x - mean(x))^2)
k4 <- n4 * sum((x - mean(x))^4)
return(k4)
}
return(NA)
}
vola.real <- sqrt(k2.real*104*365) * 100
skew.real <- (k3.real)/sqrt((k2.real)^3)
kurt.real <- (k4.real)/((k2.real)^2)
plot(vola.real, type="l")
plot(skew.real, type="l")
plot(kurt.real, type="l")
last(s)
?seq
strike.vec <- seq(from=(last(s$Close)*0.8), to=(last(s$Close)*1.2),
by=last(s$Close)/100)
last(s$Close)
F0 <- as.numeric(last(s$Close))
strike.vec <- seq(F0*0.8, to=F0*1.2, by=F0/100)
strike.vec
strike.vec <- round(seq(F0*0.8, to=F0*1.2, by=F0/100)/250, 0) * 250
strike.vec
K <- round(seq(F0*0.8, to=F0*1.2, by=F0/100)/250, 0) * 250
vola.real
last(k2.real)
sigma <- sqrt(last(k2.real) * 104)
mns <- log(K/F0)/(sigma*sqrt(30)
)
sigma <- sqrt(mean(k2.real) * 104)
lamba1 <- (mean(k3.real)/sqrt(mean(k2.real)^3)
lamba1 <- mean(k3.real)/sqrt(mean(k2.real)^3)
lamba1
lambda2 <- mean(k4.real)/(mean(k2.real)^2)
lambda2
lambda1
lambda1 <- mean(k3.real)/sqrt(mean(k2.real)^3)
lambda2 <- mean(k4.real)/(mean(k2.real)^2)
eta0 <- sigma
eta1 <- 1/6 * lambda1
eta2 <- 1/24 * lambda2
F0 <- as.numeric(last(s$Close))
K <- round(seq(F0*0.8, to=F0*1.2, by=F0/100)/250, 0) * 250
sigma <- sqrt(mean(k2.real) * 104)
lambda1 <- mean(k3.real)/sqrt(mean(k2.real)^3)
lambda2 <- mean(k4.real)/(mean(k2.real)^2)
eta0 <- sigma
eta1 <- 1/6 * lambda1
eta2 <- 1/24 * lambda2
xi <- log(K/F0)/(sigma*sqrt(30))
eta1
eta2
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
IV
plot(IV, type="l")
eta0
sigma <- mean(sqrt(k2.real * 104))
lambda1 <- mean(k3.real)/sqrt(mean(k2.real)^3)
lambda2 <- mean(k4.real)/(mean(k2.real)^2)
eta0 <- sigma
eta1 <- 1/6 * lambda1
eta2 <- 1/24 * lambda2
xi <- log(K/F0)/(sigma*sqrt(30))
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(IV, type="l")
sqrt(k2.real * 104)
sigma <- mean(sqrt(k2.real * 104 * 365))
sigma
lambda1 <- mean(k3.real)/sqrt(mean(k2.real)^3)
lambda2 <- mean(k4.real)/(mean(k2.real)^2)
eta0 <- sigma
eta1 <- 1/6 * lambda1
eta2 <- 1/24 * lambda2
xi <- log(K/F0)/(sigma*sqrt(1/12))
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(IV, type="l")
eta0
xi
eta0
eta1
eta2
eta0
sigma <- mean(sqrt(k2.real * 104 * 365))
lambda1 <- mean(k3.real)/sqrt(mean(k2.real*104*365)^3)
lambda2 <- mean(k4.real)/(mean(k2.real*104*365)^2)
eta0 <- sigma
eta1 <- 1/6 * lambda1
eta2 <- 1/24 * lambda2
xi <- log(K/F0)/(sigma*sqrt(1/12))
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(IV, type="l")
sigma <- mean(sqrt(k2.real))
lambda1 <- mean(k3.real)/sqrt(mean(k2.real)^3)
lambda2 <- mean(k4.real)/(mean(k2.real)^2)
eta0 <- sigma
eta1 <- 1/6 * lambda1
eta2 <- 1/24 * lambda2
xi <- log(K/F0)/(sigma*sqrt(1/12))
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(IV, type="l")
eta0
xi <- log(K/F0)/(sigma*sqrt(30*104))
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(IV, type="l")
eta0 <- sigma*sqrt(104*365)
eta1 <- 1/6 * lambda1
eta2 <- 1/24 * lambda2
xi <- log(K/F0)/(sigma*sqrt(30*104))
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(IV, type="l")
eta0 <- sigma
eta1 <- 1/6 * lambda1
eta2 <- 1/24 * lambda2
xi <- log(K/F0)/(sigma*sqrt(30*104))
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(IV, type="l")
eta0
eta1
xi
lambda2
lambda1
xi
sigma <- mean(sqrt(k2.real))
lambda1 <- mean(k3.real)/sqrt(mean(k2.real)^3)
lambda2 <- mean(k4.real)/(mean(k2.real)^2) - 3
eta0 <- sigma
eta1 <- 1/6 * lambda1
eta2 <- 1/24 * lambda2
xi <- log(K/F0)/(sigma*sqrt(30*104))
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(IV, type="l")
eta0 <- sigma*sqrt(104*365)
eta1 <- 1/6 * lambda1
eta2 <- 1/24 * lambda2
xi <- log(K/F0)/(sigma*sqrt(30*104))
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(IV, type="l")
F0 <- as.numeric(last(s$Close))
K <- round(seq(F0*0.9, to=F0*1.1, by=F0/100)/250, 0) * 250
sigma <- mean(sqrt(k2.real))
lambda1 <- mean(k3.real)/sqrt(mean(k2.real)^3)
lambda2 <- mean(k4.real)/(mean(k2.real)^2) - 3
eta0 <- sigma*sqrt(104*365)
eta1 <- 1/6 * lambda1
eta2 <- 1/24 * lambda2
xi <- log(K/F0)/(sigma*sqrt(30*104))
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(IV, type="l")
plot(x=K, y=IV, type="l")
plot(x=K, y=IV*100, type="l")
lambda1
lambda2
sigma*sqrt(30*104)
xi <- log(K/F0)/(sigma*sqrt(30*104)*100)
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(x=K, y=IV*100, type="l")
eta0 <- 0.1
eta1 <- 1/6 * 0.2
eta2 <- 1/24 * 0.1
xi <- log(K/F0)/(0.1*sqrt(1/12))
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(x=K, y=IV*100, type="l")
eta2 <- 1/24 * 0.5
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(x=K, y=IV*100, type="l")
abline(v=F0)
lambda1
lambda2
eta2 <- 1/24 * 9
xi <- log(K/F0)/(0.1*sqrt(1/12))
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(x=K, y=IV*100, type="l")
abline(v=F0)
eta2 <- 1/24 * 1
xi <- log(K/F0)/(0.1*sqrt(1/12))
IV <- eta0 * (1 + eta1 * xi + eta2 * xi^2)
plot(x=K, y=IV*100, type="l")
abline(v=F0)
